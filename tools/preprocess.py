from __future__ import absolute_import, division, print_function

import argparse
import os
import os.path as osp

from nltk import tokenize


def process_file(src_file: str, dst_file: str) -> None:
    """Tokenizes file generated by Wikiextractor.

    Each file contain several documents in the format:
        <doc id="" revid="" url="" title="">
            ...
            </doc>
    """
    output = []
    with open(src_file, 'r') as f:
        for line in f:
            line = line.strip()
            if not line:
                continue
            if '</doc>' == line:
                output.append('')
                continue
            if '<doc' == line[:4]:
                continue
            if '[[' == line[:2]:
                continue
            lines = tokenize.sent_tokenize(line)
            for l in lines:
                output.append(l)

    with open(dst_file, 'w') as f:
        for l in output:
            f.write(l + '\n')


def process_dir(src_dir: str, dst_dir: str) -> None:
    """Processes directory generated by Wikiextractor."""
    for dir_name in os.listdir(src_dir):
        dir_path = osp.join(src_dir, dir_name)
        if not osp.isdir(dir_path):
            continue

        print('Processing {}'.format(dir_path))
        for file_name in os.listdir(dir_path):
            file_path = osp.join(dir_path, file_name)
            if not osp.isfile(file_path):
                continue

            dst_path = osp.join(dst_dir, dir_name)
            os.makedirs(dst_path, exist_ok=True)

            dst_file = osp.join(dst_path, file_name)
            process_file(file_path, dst_file)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--src-dir', dest='src_dir', type=str, help='directory generated by Wikiextractor'
    )
    parser.add_argument(
        '--dst-dir', dest='dst_dir', type=str, help='directory to saved files'
    )

    args = parser.parse_args()
    process_dir(args.src_dir, args.dst_dir)

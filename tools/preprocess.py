from __future__ import absolute_import, division, print_function

import os

from transformers.data.utils import extract_documents, get_sent_tokenize_fn, list_wiki_dir


def parse_args():
    import argparse

    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--input', type=str, required=True, help='directory generated by Wikiextractor'
    )
    parser.add_argument('--output', type=str, required=True, help='directory to saved files')
    parser.add_argument(
        '--tokenization-name', type=str, default='nltk', help='name to tokenization function'
    )

    args = parser.parse_args()
    return args


def main():
    args = parse_args()
    dirs, filenames_list = list_wiki_dir(args.input)

    sent_tokenize_fn = get_sent_tokenize_fn(args.tokenization_name)

    for d, filenames in zip(dirs, filenames_list):
        output_dir = os.path.join(args.output, d)
        os.makedirs(output_dir, exist_ok=True)

        print('Processing {}'.format(d))
        for filename in filenames:
            input_file = os.path.join(args.input, d, filename)
            documents = extract_documents(input_file)

            new_documents = []
            for doc in documents:
                # The first element of doc is title
                new_doc = doc[:1] + sent_tokenize_fn(doc[1:])
                new_documents.append(new_doc)

            output_file = os.path.join(args.output, d, filename)
            with open(output_file, 'w') as f:
                for doc in new_documents:
                    f.write('\n'.join(doc))
                    f.write('\n\n')


if __name__ == '__main__':
    main()
